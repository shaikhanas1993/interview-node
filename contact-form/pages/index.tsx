import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { useFormik } from "formik";
import * as Yup from "yup";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const formik = useFormik({
    initialValues: {
      email: "",
      firstname: "",
      lastname: "",
      message: "",
    },
    validationSchema: Yup.object({
      firstname: Yup.string().label("firstname").required(),
      lastname: Yup.string().label("lastname").required(),
      message: Yup.string().label("message").required(),
      email: Yup.string().email().required(),
    }),
    onSubmit: async (values) => {
      const apiUrl = process.env.HOST || "http://localhost:4000";
      const payload = {
        firstName: values.firstname,
        lastName: values.lastname,
        email: values.email,
        message: values.message,
      };

      const res = await fetch(apiUrl + "/post-form", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });

      if (res.status == 201) {
        alert("recoreded inserted successfully");
      } else {
        alert("something went wrong. Try again");
      }
    },
  });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form onSubmit={formik.handleSubmit}>
          <div>
            <label htmlFor="firstname">First Name</label>
            <input
              id="firstname"
              name="firstname"
              type="text"
              onChange={formik.handleChange}
              value={formik.values.firstname}
            />
            {formik.touched.firstname && formik.errors.firstname && (
              <span className="text-red-400">{formik.errors.firstname}</span>
            )}
          </div>
          <div>
            <label htmlFor="lastname">Last Name</label>
            <input
              id="lastname"
              name="lastname"
              type="text"
              onChange={formik.handleChange}
              value={formik.values.lastname}
            />
            {formik.touched.lastname && formik.errors.lastname && (
              <span className="text-red-400">{formik.errors.lastname}</span>
            )}
          </div>
          <div>
            <label htmlFor="email">Email Address</label>
            <input
              id="email"
              name="email"
              type="email"
              onChange={formik.handleChange}
              value={formik.values.email}
            />

            {formik.touched.email && formik.errors.email && (
              <span className="text-red-400">{formik.errors.email}</span>
            )}
          </div>
          <div>
            <label htmlFor="message">Message</label>
            <textarea
              id="message"
              name="message"
              onChange={formik.handleChange}
              value={formik.values.message}
            />
            {formik.touched.message && formik.errors.message && (
              <span className="text-red-400">{formik.errors.message}</span>
            )}
          </div>
          <div>
            <button type="submit">Submit</button>
          </div>
        </form>
      </main>
    </>
  );
}
